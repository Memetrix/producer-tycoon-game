export interface GameState {
  // Player
  playerName: string
  playerAvatar: string
  musicStyle: MusicStyle
  startingBonus: StartingBonus

  // Resources
  money: number
  reputation: number
  energy: number
  // gems removed - was never used in game mechanics

  // Progress
  currentStage: number
  stageProgress: number

  // Stats
  totalBeatsCreated: number
  totalMoneyEarned: number
  totalBeatsEarnings: number
  totalArtistsHired: number // RENAMED: was totalCollabs - tracks unique artists hired

  // Equipment levels
  equipment: {
    phone: number
    headphones: number
    microphone: number
    computer: number
    midi: number
    audioInterface: number
  }

  // Beats inventory
  beats: Beat[]

  artists: {
    // Tier 1: Street (0-500 rep)
    "mc-flow": number
    "lil-dreamer": number
    "street-poet": number
    "young-legend": number
    // Tier 2: Local (500-2000 rep)
    "local-hero": number
    "scene-leader": number
    // Tier 3: Regional (2000-5000 rep)
    "city-star": number
    "state-champion": number
  }

  // Upgrades purchased
  purchasedUpgrades: string[]

  // Daily tasks
  dailyTasks: {
    lastCompletedDate: string // ISO date string
    currentStreak: number
    completedTaskIds: string[] // IDs of tasks completed today
    claimedStreakRewards: number[] // Streak milestones that have been claimed (e.g., [7, 14])
  }

  // Training progress
  trainingProgress: {
    freeSeminar: boolean
    freeBookChapter: boolean
  }

  // Phase 3: Skills, Contracts, Labels
  skills: {
    // Energy Branch
    caffeineRush: boolean // -10% energy cost (500 rep)
    stamina: boolean // +20% max energy (2000 rep)
    flowState: boolean // +1 energy regen/min (5000 rep)
    // Quality Branch
    earTraining: boolean // +5% quality (500 rep)
    musicTheory: boolean // +10% quality (2000 rep)
    perfectionist: boolean // +20% quality (5000 rep)
    // Money Branch
    negotiator: boolean // +10% beat price (500 rep)
    businessman: boolean // +25% beat price (2000 rep)
    mogul: boolean // +50% beat price (5000 rep)
  }

  beatContracts: {
    availableContracts: string[] // IDs of available contracts
    activeContracts: string[] // IDs of active contracts
    completedContracts: string[] // IDs of completed contracts (for history)
    lastRefreshDate: string // ISO date string
  }

  labelDeals: {
    indie: boolean // $5,000 investment ‚Üí +$50/—á–∞—Å
    small: boolean // $20,000 investment ‚Üí +$200/—á–∞—Å
    major: boolean // $100,000 investment ‚Üí +$1,000/—á–∞—Å
  }

  lastActive?: string // ISO date string
}

export interface Beat {
  id: string
  name: string
  price: number
  quality: number
  cover: string
  createdAt: number
}

export interface Artist {
  id: string
  name: string
  avatar: string
  skill: number
  popularity: number
  cost: number
  genre: string
  isHired: boolean
  isWorking: boolean
}

export type MusicStyle = "hip-hop" | "trap" | "rnb" | "pop" | "electronic"
export type StartingBonus = "producer" | "hustler" | "connector" | "energizer"

export const MUSIC_STYLES: Record<MusicStyle, { name: string; description: string; bonus: string; emoji: string }> = {
  "hip-hop": {
    name: "Hip-Hop",
    description: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ö–∏–ø-—Ö–æ–ø —Å —Å–∏–ª—å–Ω—ã–º –±–∏—Ç–æ–º",
    bonus: "+$200 —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –¥–µ–Ω–µ–≥",
    emoji: "üé§",
  },
  trap: {
    name: "Trap",
    description: "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ç—Ä—ç–ø —Å 808 –±–∞—Å–∞–º–∏",
    bonus: "+100 —Å—Ç–∞—Ä—Ç–æ–≤–æ–π —Ä–µ–ø—É—Ç–∞—Ü–∏–∏",
    emoji: "üî•",
  },
  rnb: {
    name: "R&B",
    description: "–ú–µ–ª–æ–¥–∏—á–Ω—ã–π R&B —Å –¥—É—à–µ–≤–Ω—ã–º–∏ –≤–æ–∫–∞–ª–∞–º–∏",
    bonus: "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏ (—É—Ä–æ–≤–µ–Ω—å 1) + $100",
    emoji: "üí´",
  },
  pop: {
    name: "Pop",
    description: "–ü–æ–ø—É–ª—è—Ä–Ω–∞—è –º—É–∑—ã–∫–∞ –¥–ª—è —à–∏—Ä–æ–∫–æ–π –∞—É–¥–∏—Ç–æ—Ä–∏–∏",
    bonus: "+$150 –¥–µ–Ω–µ–≥ –∏ +50 —Ä–µ–ø—É—Ç–∞—Ü–∏–∏",
    emoji: "‚≠ê",
  },
  electronic: {
    name: "Electronic",
    description: "–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞—è –º—É–∑—ã–∫–∞ –∏ EDM",
    bonus: "+30 –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏ + $100",
    emoji: "‚ö°",
  },
}

export const STARTING_BONUSES: Record<
  StartingBonus,
  { name: string; description: string; bonus: string; icon: string }
> = {
  producer: {
    name: "–ü—Ä–æ–¥—é—Å–µ—Ä",
    description: "–¢—ã —Ñ–æ–∫—É—Å–∏—Ä—É–µ—à—å—Å—è –Ω–∞ –∫–∞—á–µ—Å—Ç–≤–µ –∑–≤—É–∫–∞",
    bonus: "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏ (—É—Ä–æ–≤–µ–Ω—å 1) + $200",
    icon: "üéß",
  },
  hustler: {
    name: "–•–∞—Å—Ç–ª–µ—Ä",
    description: "–¢—ã —É–º–µ–µ—à—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏",
    bonus: "+$400 —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –¥–µ–Ω–µ–≥",
    icon: "üí∞",
  },
  connector: {
    name: "–ö–æ–Ω–Ω–µ–∫—Ç–æ—Ä",
    description: "–£ —Ç–µ–±—è –º–Ω–æ–≥–æ —Å–≤—è–∑–µ–π –≤ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏",
    bonus: "+200 —Å—Ç–∞—Ä—Ç–æ–≤–æ–π —Ä–µ–ø—É—Ç–∞—Ü–∏–∏ + $100",
    icon: "ü§ù",
  },
  energizer: {
    name: "–≠–Ω–µ—Ä–¥–∂–∞–π–∑–µ—Ä",
    description: "–¢—ã –º–æ–∂–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å –¥–æ–ª—å—à–µ –¥—Ä—É–≥–∏—Ö",
    bonus: "+50 –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏ + $200",
    icon: "‚ö°",
  },
}

// ENERGY SYSTEM CONSTANTS
export const ENERGY_CONFIG = {
  BASE_MAX_ENERGY: 150, // Increased from 100 for better flow
  ENERGY_REGEN_PER_MINUTE: 2, // Increased from 1 for faster gameplay
  ENERGY_COST_PER_BEAT: 15, // Decreased from 20 for more beats per session
  FULL_RECHARGE_TIME_MINUTES: 75, // 150 / 2 = 75 minutes (was 100 minutes)
}

export const INITIAL_GAME_STATE: GameState = {
  playerName: "",
  playerAvatar: "",
  musicStyle: "hip-hop",
  startingBonus: "producer",
  money: 800,
  reputation: 0,
  energy: 150, // UPDATED: –±—ã–ª–æ 100, —Å—Ç–∞–ª–æ 150 –¥–ª—è –ª—É—á—à–µ–≥–æ flow
  currentStage: 1,
  stageProgress: 0,
  totalBeatsCreated: 0,
  totalMoneyEarned: 0,
  totalBeatsEarnings: 0,
  totalArtistsHired: 0,
  equipment: {
    phone: 1,
    headphones: 0,
    microphone: 0,
    computer: 0,
    midi: 0,
    audioInterface: 0,
  },
  beats: [],
  artists: {
    // Tier 1: Street (0-500 rep)
    "mc-flow": 0,
    "lil-dreamer": 0,
    "street-poet": 0,
    "young-legend": 0,
    // Tier 2: Local (500-2000 rep)
    "local-hero": 0,
    "scene-leader": 0,
    // Tier 3: Regional (2000-5000 rep)
    "city-star": 0,
    "state-champion": 0,
  },
  purchasedUpgrades: [],
  dailyTasks: {
    lastCompletedDate: "",
    currentStreak: 0,
    completedTaskIds: [],
    claimedStreakRewards: [],
  },
  trainingProgress: {
    freeSeminar: false,
    freeBookChapter: false,
  },
  skills: {
    // Energy Branch
    caffeineRush: false,
    stamina: false,
    flowState: false,
    // Quality Branch
    earTraining: false,
    musicTheory: false,
    perfectionist: false,
    // Money Branch
    negotiator: false,
    businessman: false,
    mogul: false,
  },
  beatContracts: {
    availableContracts: [],
    activeContracts: [],
    completedContracts: [],
    lastRefreshDate: "",
  },
  labelDeals: {
    indie: false,
    small: false,
    major: false,
  },
}

export const BEAT_NAMES = [
  "–£–ª–∏—á–Ω—ã–µ –º–µ—á—Ç—ã",
  "–ù–æ—á–Ω–∞—è —Å—É–µ—Ç–∞",
  "–û–≥–Ω–∏ –≥–æ—Ä–æ–¥–∞",
  "–ì–æ—Ä–æ–¥—Å–∫–æ–π —Ä–∏—Ç–º",
  "–¢–µ–º–Ω—ã–µ —É–ª–∏—Ü—ã",
  "–ù–µ–æ–Ω–æ–≤—ã–π —Ñ–ª–æ—É",
  "–ë–µ—Ç–æ–Ω–Ω—ã–µ –¥–∂—É–Ω–≥–ª–∏",
  "–ü–æ–ª—É–Ω–æ—á–Ω—ã–π —Ö–∞—Å—Ç–ª",
  "–ê—Å—Ñ–∞–ª—å—Ç–æ–≤–∞—è –ø–æ—ç–∑–∏—è",
  "–ú–µ—Ç—Ä–æ –≤–∞–π–±",
  "–†–∞–π–æ–Ω–Ω—ã–µ –∏—Å—Ç–æ—Ä–∏–∏",
  "–ë–µ—Ç–æ–Ω–Ω–∞—è –≤–æ–ª–Ω–∞",
  "–£–ª–∏—á–Ω—ã–π —Ñ–∏–ª–æ—Å–æ—Ñ",
  "–ù–æ—á–Ω–æ–π –¥–æ–∑–æ—Ä",
  "–ì–æ—Ä–æ–¥—Å–∫–∏–µ –ª–µ–≥–µ–Ω–¥—ã",
]

export const STAGE_TITLES: Record<number, string> = {
  1: "–£–ª–∏—á–Ω—ã–π –±–∏—Ç–º–µ–π–∫–µ—Ä",
  2: "–î–æ–º–∞—à–Ω–∏–π –ø—Ä–æ–¥—é—Å–µ—Ä",
  3: "–°—Ç—É–¥–∏–π–Ω—ã–π –º–∞—Å—Ç–µ—Ä",
  4: "–ò–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–æ–¥—é—Å–µ—Ä",
  5: "–ó–≤–µ–∑–¥–Ω—ã–π –ø—Ä–æ–¥—é—Å–µ—Ä",
}

export const EQUIPMENT_TIERS = {
  phone: {
    name: "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∑–∞–ø–∏—Å–∏",
    tiers: [
      { level: 0, name: "–ù–µ—Ç", description: "" },
      { level: 1, name: "–°–º–∞—Ä—Ç—Ñ–æ–Ω", description: "–ë–∞–∑–æ–≤–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω" },
      { level: 2, name: "–ü–ª–∞–Ω—à–µ—Ç —Å DAW", description: "–ú–æ–±–∏–ª—å–Ω–∞—è —Å—Ç—É–¥–∏—è" },
      { level: 3, name: "–ù–æ—É—Ç–±—É–∫", description: "–ü–æ–ª–Ω–æ—Ü–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞" },
      { level: 4, name: "–ú–æ—â–Ω—ã–π –Ω–æ—É—Ç–±—É–∫", description: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞" },
      { level: 5, name: "–†–∞–±–æ—á–∞—è —Å—Ç–∞–Ω—Ü–∏—è", description: "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å" },
      { level: 6, name: "Mac Studio", description: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ä–∞–±–æ—á–∞—è —Å—Ç–∞–Ω—Ü–∏—è" },
      { level: 7, name: "Custom PC Pro", description: "–ö–∞—Å—Ç–æ–º–Ω—ã–π —Ç–æ–ø–æ–≤—ã–π –∫–æ–º–ø—å—é—Ç–µ—Ä" },
      { level: 8, name: "Server Grade", description: "–°–µ—Ä–≤–µ—Ä–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ" },
      { level: 9, name: "AI Workstation", description: "AI-–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–∞–Ω—Ü–∏—è" },
      { level: 10, name: "Quantum Studio", description: "–ë—É–¥—É—â–µ–µ –∑–≤—É–∫–æ–∑–∞–ø–∏—Å–∏" },
    ],
  },
  headphones: {
    name: "–ù–∞—É—à–Ω–∏–∫–∏",
    tiers: [
      { level: 0, name: "–ù–µ—Ç", description: "" },
      { level: 1, name: "–ü—Ä–æ–≤–æ–¥–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏", description: "–ë–∞–∑–æ–≤—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥" },
      { level: 2, name: "Bluetooth –Ω–∞—É—à–Ω–∏–∫–∏", description: "–£–¥–æ–±—Å—Ç–≤–æ —Ä–∞–±–æ—Ç—ã" },
      { level: 3, name: "–°—Ç—É–¥–∏–π–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏", description: "–¢–æ—á–Ω—ã–π –∑–≤—É–∫" },
      { level: 4, name: "–ú–æ–Ω–∏—Ç–æ—Ä–Ω—ã–µ –Ω–∞—É—à–Ω–∏–∫–∏", description: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥" },
      { level: 5, name: "Hi-End –Ω–∞—É—à–Ω–∏–∫–∏", description: "–≠—Ç–∞–ª–æ–Ω–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ" },
      { level: 6, name: "Planar Magnetic", description: "–ü–ª–æ—Å–∫–∏–µ –¥—Ä–∞–π–≤–µ—Ä—ã" },
      { level: 7, name: "Electrostatic", description: "–≠–ª–µ–∫—Ç—Ä–æ—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –Ω–∞—É—à–Ω–∏–∫–∏" },
      { level: 8, name: "Custom Tuned", description: "–ö–∞—Å—Ç–æ–º–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥ —Å–ª—É—Ö" },
      { level: 9, name: "Reference Grade", description: "–≠—Ç–∞–ª–æ–Ω–Ω—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥" },
      { level: 10, name: "Legendary Sound", description: "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –∑–≤—É–∫" },
    ],
  },
  microphone: {
    name: "–ú–∏–∫—Ä–æ—Ñ–æ–Ω",
    tiers: [
      { level: 0, name: "–ù–µ—Ç", description: "" },
      { level: 1, name: "USB –º–∏–∫—Ä–æ—Ñ–æ–Ω", description: "–ü—Ä–æ—Å—Ç–∞—è –∑–∞–ø–∏—Å—å –≤–æ–∫–∞–ª–∞" },
      { level: 2, name: "–ö–æ–Ω–¥–µ–Ω—Å–∞—Ç–æ—Ä–Ω—ã–π –º–∏–∫—Ä–æ—Ñ–æ–Ω", description: "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å" },
      { level: 3, name: "–°—Ç—É–¥–∏–π–Ω—ã–π –º–∏–∫—Ä–æ—Ñ–æ–Ω", description: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∑–≤—É–∫" },
      { level: 4, name: "–õ–∞–º–ø–æ–≤—ã–π –º–∏–∫—Ä–æ—Ñ–æ–Ω", description: "–¢–µ–ø–ª—ã–π –≤–∏–Ω—Ç–∞–∂–Ω—ã–π –∑–≤—É–∫" },
      { level: 5, name: "–¢–æ–ø–æ–≤—ã–π —Å—Ç—É–¥–∏–π–Ω—ã–π –º–∏–∫—Ä–æ—Ñ–æ–Ω", description: "–≠—Ç–∞–ª–æ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å" },
      { level: 6, name: "Large Diaphragm Tube", description: "–ë–æ–ª—å—à–∞—è –º–µ–º–±—Ä–∞–Ω–∞, –ª–∞–º–ø–∞" },
      { level: 7, name: "Vintage Neumann", description: "–í–∏–Ω—Ç–∞–∂–Ω—ã–π Neumann" },
      { level: 8, name: "Telefunken ELA M 251", description: "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π –º–∏–∫—Ä–æ—Ñ–æ–Ω" },
      { level: 9, name: "Sony C-800G", description: "–¢–æ–ø–æ–≤—ã–π –≤–æ–∫–∞–ª—å–Ω—ã–π –º–∏–∫—Ä–æ—Ñ–æ–Ω" },
      { level: 10, name: "Custom Vintage Collection", description: "–ö–æ–ª–ª–µ–∫—Ü–∏—è –≤–∏–Ω—Ç–∞–∂–Ω—ã—Ö –º–∏–∫—Ä–æ—Ñ–æ–Ω–æ–≤" },
    ],
  },
  computer: {
    name: "–°—Ç—É–¥–∏—è",
    tiers: [
      { level: 0, name: "–ù–µ—Ç", description: "" },
      { level: 1, name: "–ê—É–¥–∏–æ–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å", description: "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–≤—É–∫" },
      { level: 2, name: "–î–æ–º–∞—à–Ω—è—è —Å—Ç—É–¥–∏—è", description: "–ë–∞–∑–æ–≤–∞—è —Å—Ç—É–¥–∏—è" },
      { level: 3, name: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Å—Ç—É–¥–∏—è", description: "–ü–æ–ª–Ω—ã–π –Ω–∞–±–æ—Ä –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è" },
      { level: 4, name: "–ó–≤—É–∫–æ–∑–∞–ø–∏—Å—ã–≤–∞—é—â–∞—è —Å—Ç—É–¥–∏—è", description: "–ö–æ–º–º–µ—Ä—á–µ—Å–∫–∞—è —Å—Ç—É–¥–∏—è" },
      { level: 5, name: "–¢–æ–ø–æ–≤–∞—è —Å—Ç—É–¥–∏—è", description: "–ú–∏—Ä–æ–≤–æ–π —É—Ä–æ–≤–µ–Ω—å" },
      { level: 6, name: "SSL Console Studio", description: "SSL –∫–æ–Ω—Å–æ–ª—å" },
      { level: 7, name: "Abbey Road Replica", description: "–ö–æ–ø–∏—è Abbey Road" },
      { level: 8, name: "Hitsville U.S.A.", description: "Motown –ª–µ–≥–µ–Ω–¥–∞" },
      { level: 9, name: "Electric Lady Studios", description: "–°—Ç—É–¥–∏—è –î–∂–∏–º–º–∏ –•–µ–Ω–¥—Ä–∏–∫—Å–∞" },
      { level: 10, name: "Your Own Legend", description: "–¢–≤–æ—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –ª–µ–≥–µ–Ω–¥–∞" },
    ],
  },
  midi: {
    name: "MIDI –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä",
    tiers: [
      { level: 0, name: "–ù–µ—Ç", description: "" },
      { level: 1, name: "MIDI –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ 25", description: "–ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞" },
      { level: 2, name: "MIDI –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ 49", description: "–°—Ä–µ–¥–Ω—è—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞" },
      { level: 3, name: "MIDI –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ 61", description: "–ü–æ–ª–Ω–æ—Ä–∞–∑–º–µ—Ä–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞" },
      { level: 4, name: "MIDI –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ 88", description: "–ü–æ–ª–Ω—ã–π —Ä–∞–∑–º–µ—Ä –ø–∏–∞–Ω–∏–Ω–æ" },
      { level: 5, name: "Weighted Keys 88", description: "–í–∑–≤–µ—à–µ–Ω–Ω—ã–µ –∫–ª–∞–≤–∏—à–∏" },
      { level: 6, name: "MPK Series", description: "Akai MPK –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è" },
      { level: 7, name: "Native Instruments S88", description: "Native Instruments —Ç–æ–ø" },
      { level: 8, name: "Roland Fantom", description: "Roland —Å–∏–Ω—Ç–µ–∑–∞—Ç–æ—Ä-—Ä–∞–±–æ—á–∞—è —Å—Ç–∞–Ω—Ü–∏—è" },
      { level: 9, name: "Yamaha Montage", description: "Yamaha —Ñ–ª–∞–≥–º–∞–Ω" },
      { level: 10, name: "Moog One", description: "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π Moog —Å–∏–Ω—Ç–µ–∑–∞—Ç–æ—Ä" },
    ],
  },
  audioInterface: {
    name: "–ê—É–¥–∏–æ–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å",
    tiers: [
      { level: 0, name: "–ù–µ—Ç", description: "" },
      { level: 1, name: "Focusrite Scarlett Solo", description: "–ù–∞—á–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å" },
      { level: 2, name: "Focusrite Scarlett 2i2", description: "–î–æ–º–∞—à–Ω—è—è –∑–∞–ø–∏—Å—å" },
      { level: 3, name: "Universal Audio Apollo Twin", description: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∑–≤—É–∫" },
      { level: 4, name: "UA Apollo x4", description: "–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏" },
      { level: 5, name: "UA Apollo x8", description: "–°—Ç—É–¥–∏–π–Ω—ã–π —Å—Ç–∞–Ω–¥–∞—Ä—Ç" },
      { level: 6, name: "Antelope Audio Orion", description: "–¢–æ–ø–æ–≤–∞—è –∫–æ–Ω–≤–µ—Ä—Å–∏—è" },
      { level: 7, name: "Apogee Symphony", description: "Apogee –∫–∞—á–µ—Å—Ç–≤–æ" },
      { level: 8, name: "Prism Sound ADA-8XR", description: "–†–µ—Ñ–µ—Ä–µ–Ω—Å–Ω–∞—è –∫–æ–Ω–≤–µ—Ä—Å–∏—è" },
      { level: 9, name: "Burl Audio B80", description: "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ" },
      { level: 10, name: "Custom Mastering Chain", description: "–ö–∞—Å—Ç–æ–º–Ω—ã–π –º–∞—Å—Ç–µ—Ä–∏–Ω–≥ —á–µ–π–Ω" },
    ],
  },
}

export function getStageTitle(stage: number): string {
  return STAGE_TITLES[stage] || `–ü—Ä–æ–¥—é—Å–µ—Ä —É—Ä–æ–≤–Ω—è ${stage}`
}

export function getEquipmentTier(equipmentKey: keyof GameState["equipment"], level: number) {
  const equipment = EQUIPMENT_TIERS[equipmentKey as keyof typeof EQUIPMENT_TIERS]
  if (!equipment) return null
  return equipment.tiers.find((tier) => tier.level === level) || equipment.tiers[0]
}

export const ARTISTS_CONFIG = {
  // TIER 1: Street (0-500 rep)
  "street-poet": {
    id: "street-poet",
    name: "Street Poet",
    avatar: "/conscious-hip-hop-artist-portrait--thoughtful-rapp.jpg",
    skill: 58,
    popularity: 52,
    genre: "–°–æ–∑–Ω–∞—Ç–µ–ª—å–Ω—ã–π",
    baseCost: 70,
    incomePerLevel: [0, 5, 7, 10, 14, 20, 28, 38, 50, 65, 85], // Extended to 10 levels
    energyBonusPerLevel: [0, 8, 10, 12, 14, 18, 22, 27, 33, 40, 50], // Extended to 10 levels
    costMultiplier: 1.6,
    tier: 1,
  },
  "mc-flow": {
    id: "mc-flow",
    name: "MC Flow",
    avatar: "/hip-hop-rapper-portrait-mc-flow--young-male-artist.jpg",
    skill: 65,
    popularity: 45,
    genre: "–•–∏–ø-—Ö–æ–ø",
    baseCost: 80,
    incomePerLevel: [0, 6, 9, 13, 18, 25, 34, 46, 62, 82, 108], // Extended to 10 levels
    energyBonusPerLevel: [0, 10, 12, 14, 16, 20, 25, 31, 38, 47, 58], // Extended to 10 levels
    costMultiplier: 1.6,
    tier: 1,
  },
  "lil-dreamer": {
    id: "lil-dreamer",
    name: "Lil Dreamer",
    avatar: "/trap-artist-portrait-lil-dreamer--stylish-young-ra.jpg",
    skill: 72,
    popularity: 38,
    genre: "–¢—Ä—ç–ø",
    baseCost: 100,
    incomePerLevel: [0, 8, 11, 16, 22, 30, 41, 56, 76, 102, 136], // Extended to 10 levels
    energyBonusPerLevel: [0, 15, 18, 21, 24, 30, 37, 46, 57, 71, 88], // Extended to 10 levels
    costMultiplier: 1.6,
    tier: 1,
  },
  "young-legend": {
    id: "young-legend",
    name: "Young Legend",
    avatar: "/famous-hip-hop-star-portrait--successful-rapper-wi.jpg",
    skill: 85,
    popularity: 70,
    genre: "–•–∏–ø-—Ö–æ–ø",
    baseCost: 200,
    incomePerLevel: [0, 12, 18, 26, 36, 50, 68, 92, 124, 166, 222], // Extended to 10 levels
    energyBonusPerLevel: [0, 25, 30, 35, 40, 50, 62, 77, 96, 120, 150], // Extended to 10 levels
    costMultiplier: 1.6,
    requiresReputation: 400,
    tier: 1,
  },

  // TIER 2: Local (500-2000 rep) - NEW ARTISTS
  "local-hero": {
    id: "local-hero",
    name: "Local Hero",
    avatar: "/placeholder-artist-2.jpg",
    skill: 78,
    popularity: 65,
    genre: "R&B",
    baseCost: 300,
    incomePerLevel: [0, 20, 28, 38, 52, 70, 94, 126, 168, 224, 298],
    energyBonusPerLevel: [0, 30, 36, 43, 52, 62, 75, 90, 108, 130, 156],
    costMultiplier: 1.6,
    requiresReputation: 500,
    tier: 2,
  },
  "scene-leader": {
    id: "scene-leader",
    name: "Scene Leader",
    avatar: "/placeholder-artist-2.jpg",
    skill: 82,
    popularity: 72,
    genre: "Trap",
    baseCost: 400,
    incomePerLevel: [0, 25, 35, 48, 65, 88, 118, 158, 212, 282, 376],
    energyBonusPerLevel: [0, 35, 42, 50, 60, 72, 86, 104, 125, 150, 180],
    costMultiplier: 1.6,
    requiresReputation: 500,
    tier: 2,
  },

  // TIER 3: Regional (2000-5000 rep) - NEW ARTISTS
  "city-star": {
    id: "city-star",
    name: "City Star",
    avatar: "/placeholder-artist-3.jpg",
    skill: 88,
    popularity: 80,
    genre: "Pop",
    baseCost: 800,
    incomePerLevel: [0, 50, 68, 92, 124, 166, 222, 296, 394, 524, 698],
    energyBonusPerLevel: [0, 50, 60, 72, 86, 104, 125, 150, 180, 216, 260],
    costMultiplier: 1.6,
    requiresReputation: 2000,
    tier: 3,
  },
  "state-champion": {
    id: "state-champion",
    name: "State Champion",
    avatar: "/placeholder-artist-3.jpg",
    skill: 92,
    popularity: 85,
    genre: "Hip-Hop",
    baseCost: 1000,
    incomePerLevel: [0, 60, 82, 110, 148, 198, 264, 352, 470, 626, 834],
    energyBonusPerLevel: [0, 55, 66, 79, 95, 114, 137, 164, 197, 237, 284],
    costMultiplier: 1.6,
    requiresReputation: 2000,
    tier: 3,
  },
}

export function getArtistUpgradeCost(artistId: keyof typeof ARTISTS_CONFIG, currentLevel: number): number {
  const artist = ARTISTS_CONFIG[artistId]
  if (!artist || currentLevel >= 10) return 0 // UPDATED: –±—ã–ª–æ 5, —Å—Ç–∞–ª–æ 10 —É—Ä–æ–≤–Ω–µ–π
  return Math.floor(artist.baseCost * Math.pow(artist.costMultiplier, currentLevel))
}

export function getArtistIncome(artistId: keyof typeof ARTISTS_CONFIG, level: number): number {
  const artist = ARTISTS_CONFIG[artistId]
  if (!artist || level < 1 || level > 10) return 0 // UPDATED: –±—ã–ª–æ 5, —Å—Ç–∞–ª–æ 10
  return artist.incomePerLevel[level] || 0 // Fallback to 0 if level not defined
}

export function getArtistEnergyBonus(artistId: keyof typeof ARTISTS_CONFIG, level: number): number {
  const artist = ARTISTS_CONFIG[artistId]
  if (!artist || level < 1 || level > 10) return 0 // UPDATED: –±—ã–ª–æ 5, —Å—Ç–∞–ª–æ 10
  return artist.energyBonusPerLevel[level] || 0 // Fallback to 0 if level not defined
}

export function getTotalPassiveIncome(artists: GameState["artists"]): number {
  let total = 0
  for (const [artistId, level] of Object.entries(artists)) {
    total += getArtistIncome(artistId as keyof typeof ARTISTS_CONFIG, level)
  }
  return total
}

export function getTotalEnergyBonus(artists: GameState["artists"]): number {
  let total = 0
  for (const [artistId, level] of Object.entries(artists)) {
    total += getArtistEnergyBonus(artistId as keyof typeof ARTISTS_CONFIG, level)
  }
  return total
}

export const DAILY_TASKS_CONFIG = {
  day1: [
    {
      id: "telegram_subscribe",
      name: "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ Telegram",
      description: "–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª –≤ Telegram",
      url: "https://google.com", // Placeholder
      reward: { money: 200, reputation: 50 }, // UPDATED: –±—ã–ª–æ 100/$20 rep
      icon: "üì±",
    },
    {
      id: "twitter_subscribe",
      name: "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ X (Twitter)",
      description: "–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—Å –≤ X",
      url: "https://google.com", // Placeholder
      reward: { money: 200, reputation: 50 }, // UPDATED: –±—ã–ª–æ 100/$20 rep
      icon: "üê¶",
    },
    {
      id: "instagram_subscribe",
      name: "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ Instagram",
      description: "–ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à Instagram",
      url: "https://google.com", // Placeholder
      reward: { money: 200, reputation: 50 }, // UPDATED: –±—ã–ª–æ 100/$20 rep
      icon: "üì∏",
    },
  ],
  day2: [
    {
      id: "telegram_like",
      name: "–õ–∞–π–∫–Ω—É—Ç—å –ø–æ—Å—Ç –≤ Telegram",
      description: "–ü–æ—Å—Ç–∞–≤—å –ª–∞–π–∫ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç –≤ Telegram",
      url: "https://google.com", // Placeholder
      reward: { money: 300, reputation: 75, energy: 30 }, // UPDATED: –±—ã–ª–æ 150/$30 rep/20 energy
      icon: "üì±",
    },
    {
      id: "twitter_like",
      name: "–õ–∞–π–∫–Ω—É—Ç—å –ø–æ—Å—Ç –≤ X",
      description: "–ü–æ—Å—Ç–∞–≤—å –ª–∞–π–∫ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç –≤ X",
      url: "https://google.com", // Placeholder
      reward: { money: 300, reputation: 75, energy: 30 }, // UPDATED: –±—ã–ª–æ 150/$30 rep/20 energy
      icon: "üê¶",
    },
    {
      id: "instagram_like",
      name: "–õ–∞–π–∫–Ω—É—Ç—å –ø–æ—Å—Ç –≤ Instagram",
      description: "–ü–æ—Å—Ç–∞–≤—å –ª–∞–π–∫ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø–æ—Å—Ç –≤ Instagram",
      url: "https://google.com", // Placeholder
      reward: { money: 300, reputation: 75, energy: 30 }, // UPDATED: –±—ã–ª–æ 150/$30 rep/20 energy
      icon: "üì∏",
    },
  ],
}

export const FREE_TRAINING_CONFIG = {
  seminar: {
    id: "seminar",
    name: "–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π —Å–µ–º–∏–Ω–∞—Ä: –û—Å–Ω–æ–≤—ã –±–∏—Ç–º–µ–π–∫–∏–Ω–≥–∞",
    description: "–ò–∑—É—á–∏ –±–∞–∑–æ–≤—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏ —Å–æ–∑–¥–∞–Ω–∏—è –±–∏—Ç–æ–≤ –∑–∞ 15 –º–∏–Ω—É—Ç",
    duration: "15 –º–∏–Ω—É—Ç",
    reward: { money: 300, reputation: 100, energyBonus: 5 },
    icon: "üéì",
  },
  bookChapter: {
    id: "bookChapter",
    name: "–ü—Ä–æ–±–Ω–∞—è –≥–ª–∞–≤–∞: –ü—É—Ç—å –ø—Ä–æ–¥—é—Å–µ—Ä–∞",
    description: "–ü—Ä–æ—á–∏—Ç–∞–π –ø–µ—Ä–≤—É—é –≥–ª–∞–≤—É –∫–Ω–∏–≥–∏ –æ –∫–∞—Ä—å–µ—Ä–µ –≤ –º—É–∑—ã–∫–∞–ª—å–Ω–æ–π –∏–Ω–¥—É—Å—Ç—Ä–∏–∏",
    duration: "10 –º–∏–Ω—É—Ç",
    reward: { money: 400, reputation: 150, qualityBonus: 5 },
    icon: "üìñ",
  },
}

export function getTimeUntilDailyReset(): number {
  const now = new Date()
  const tomorrow = new Date(now)
  tomorrow.setDate(tomorrow.getDate() + 1)
  tomorrow.setHours(0, 0, 0, 0)
  return tomorrow.getTime() - now.getTime()
}

export function shouldResetDailyTasks(lastCompletedDate: string): boolean {
  if (!lastCompletedDate) return false

  const lastDate = new Date(lastCompletedDate)
  const today = new Date()

  // Reset if it's a new day
  return (
    lastDate.getDate() !== today.getDate() ||
    lastDate.getMonth() !== today.getMonth() ||
    lastDate.getFullYear() !== today.getFullYear()
  )
}

export function shouldBreakStreak(lastCompletedDate: string): boolean {
  if (!lastCompletedDate) return false

  const lastDate = new Date(lastCompletedDate)
  const today = new Date()

  // Break streak if more than 1 day has passed
  const daysDiff = Math.floor((today.getTime() - lastDate.getTime()) / (1000 * 60 * 60 * 24))
  return daysDiff > 1
}

export function getDailyTasksForDay(streakDay: number) {
  // Alternate between day 1 (subscribe) and day 2 (like) tasks
  const dayType = streakDay % 2 === 1 ? "day1" : "day2"
  return DAILY_TASKS_CONFIG[dayType]
}

export function calculateOfflineEarnings(
  lastActive: string | undefined,
  passiveIncomePerMinute: number,
): { earnings: number; minutesAway: number } {
  if (!lastActive || passiveIncomePerMinute === 0) {
    return { earnings: 0, minutesAway: 0 }
  }

  const now = new Date()
  const lastActiveDate = new Date(lastActive)
  const minutesAway = Math.floor((now.getTime() - lastActiveDate.getTime()) / (1000 * 60))

  // Cap at 4 hours (240 minutes)
  const MAX_OFFLINE_MINUTES = 240
  const cappedMinutes = Math.min(minutesAway, MAX_OFFLINE_MINUTES)

  const earnings = Math.floor(passiveIncomePerMinute * cappedMinutes)

  return { earnings, minutesAway: cappedMinutes }
}

export function formatDuration(minutes: number): string {
  if (minutes < 60) {
    return `${minutes} –º–∏–Ω`
  }
  const hours = Math.floor(minutes / 60)
  const remainingMinutes = minutes % 60
  if (remainingMinutes === 0) {
    return `${hours} —á`
  }
  return `${hours} —á ${remainingMinutes} –º–∏–Ω`
}

// REPUTATION TIERS - Gate content and provide progression structure
export const REPUTATION_TIERS = {
  1: { min: 0, max: 500, name: "–£–ª–∏—á–Ω—ã–π" },
  2: { min: 500, max: 2000, name: "–ú–µ—Å—Ç–Ω—ã–π" },
  3: { min: 2000, max: 5000, name: "–†–µ–≥–∏–æ–Ω–∞–ª—å–Ω—ã–π" },
  4: { min: 5000, max: 15000, name: "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π" },
  5: { min: 15000, max: 50000, name: "–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π" },
  6: { min: 50000, max: Infinity, name: "–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π" },
}

// Get current reputation tier from reputation amount
export function getReputationTier(reputation: number): number {
  if (reputation < 500) return 1
  if (reputation < 2000) return 2
  if (reputation < 5000) return 3
  if (reputation < 15000) return 4
  if (reputation < 50000) return 5
  return 6
}

// TIER PRICE MULTIPLIERS - Prices increase as reputation grows
// Tier 1 (0-500): 1.0x base price
// Tier 2 (500-2k): 1.25x
// Tier 3 (2k-5k): 1.5x
// Tier 4 (5k-15k): 1.75x
// Tier 5 (15k-50k): 2.0x
// Tier 6 (50k+): 2.5x
export const TIER_PRICE_MULTIPLIERS = [1.0, 1.0, 1.25, 1.5, 1.75, 2.0, 2.5]

export function getTierPriceMultiplier(reputation: number): number {
  const tier = getReputationTier(reputation)
  return TIER_PRICE_MULTIPLIERS[tier]
}

export const STREAK_REWARDS = {
  7: {
    money: 500,
    reputation: 100,
    description: "7 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥",
  },
  14: {
    money: 1500,
    reputation: 300,
    description: "14 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥",
  },
  21: {
    money: 3000,
    reputation: 800,
    description: "21 –¥–µ–Ω—å –ø–æ–¥—Ä—è–¥ - –°–µ—Ä—å—ë–∑–Ω—ã–π –ø—Ä–æ–¥—é—Å–µ—Ä!",
  },
  30: {
    money: 5000,
    reputation: 2000,
    description: "30 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥ - –†–µ–≥–∏–æ–Ω–∞–ª—å–Ω–∞—è –∑–≤–µ–∑–¥–∞!",
  },
  40: {
    money: 8000,
    reputation: 4000,
    description: "40 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥ - –ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–µ—Ä–æ–π!",
  },
  50: {
    money: 12000,
    reputation: 8000,
    description: "50 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥ - –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å!",
  },
  60: {
    money: 20000,
    reputation: 15000,
    description: "60 –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥ - –õ–ï–ì–ï–ù–î–ê–†–ù–´–ô –ü–†–û–î–Æ–°–ï–†!",
  },
}

export function getUnclaimedStreakRewards(currentStreak: number, claimedRewards: number[]): number[] {
  const unclaimed: number[] = []
  for (const milestone of [7, 14, 21, 30, 40, 50, 60]) {
    if (currentStreak >= milestone && !claimedRewards.includes(milestone)) {
      unclaimed.push(milestone)
    }
  }
  return unclaimed
}

// ============================================================================
// PHASE 3: SKILL TREE, BEAT CONTRACTS, LABEL DEALS
// ============================================================================

// SKILL TREE CONFIGURATION
export interface SkillNode {
  id: keyof GameState["skills"]
  name: string
  description: string
  branch: "energy" | "quality" | "money"
  requiredReputation: number
  cost: number
  effect: string
  icon: string
}

export const SKILLS_CONFIG: Record<keyof GameState["skills"], SkillNode> = {
  // Energy Branch (Tier 1, 2, 3)
  caffeineRush: {
    id: "caffeineRush",
    name: "–ö–æ—Ñ–µ–∏–Ω–æ–≤—ã–π –†–∞—à",
    description: "–°–Ω–∏–∂–∞–µ—Ç –∑–∞—Ç—Ä–∞—Ç—ã —ç–Ω–µ—Ä–≥–∏–∏ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –±–∏—Ç–æ–≤",
    branch: "energy",
    requiredReputation: 500,
    cost: 2000,
    effect: "-10% –∑–∞—Ç—Ä–∞—Ç—ã —ç–Ω–µ—Ä–≥–∏–∏",
    icon: "‚òï",
  },
  stamina: {
    id: "stamina",
    name: "–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å",
    description: "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∑–∞–ø–∞—Å —ç–Ω–µ—Ä–≥–∏–∏",
    branch: "energy",
    requiredReputation: 2000,
    cost: 8000,
    effect: "+20% –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏",
    icon: "üí™",
  },
  flowState: {
    id: "flowState",
    name: "–°–æ—Å—Ç–æ—è–Ω–∏–µ –ü–æ—Ç–æ–∫–∞",
    description: "–£—Å–∫–æ—Ä—è–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏",
    branch: "energy",
    requiredReputation: 5000,
    cost: 20000,
    effect: "+1 —ç–Ω–µ—Ä–≥–∏—è/–º–∏–Ω",
    icon: "üåä",
  },

  // Quality Branch (Tier 1, 2, 3)
  earTraining: {
    id: "earTraining",
    name: "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞ –°–ª—É—Ö–∞",
    description: "–£–ª—É—á—à–∞–µ—Ç –≤–æ—Å–ø—Ä–∏—è—Ç–∏–µ –¥–µ—Ç–∞–ª–µ–π –∑–≤—É–∫–∞",
    branch: "quality",
    requiredReputation: 500,
    cost: 2000,
    effect: "+5% –∫–∞—á–µ—Å—Ç–≤–æ –±–∏—Ç–æ–≤",
    icon: "üëÇ",
  },
  musicTheory: {
    id: "musicTheory",
    name: "–¢–µ–æ—Ä–∏—è –ú—É–∑—ã–∫–∏",
    description: "–ì–ª—É–±–æ–∫–æ–µ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –º—É–∑—ã–∫–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä—É–∫—Ç—É—Ä",
    branch: "quality",
    requiredReputation: 2000,
    cost: 8000,
    effect: "+10% –∫–∞—á–µ—Å—Ç–≤–æ –±–∏—Ç–æ–≤",
    icon: "üìö",
  },
  perfectionist: {
    id: "perfectionist",
    name: "–ü–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏—Å—Ç",
    description: "–î–æ–≤–µ–¥–µ–Ω–∏–µ –∫–∞–∂–¥–æ–π –¥–µ—Ç–∞–ª–∏ –¥–æ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–∞",
    branch: "quality",
    requiredReputation: 5000,
    cost: 20000,
    effect: "+20% –∫–∞—á–µ—Å—Ç–≤–æ –±–∏—Ç–æ–≤",
    icon: "‚ú®",
  },

  // Money Branch (Tier 1, 2, 3)
  negotiator: {
    id: "negotiator",
    name: "–ü–µ—Ä–µ–≥–æ–≤–æ—Ä—â–∏–∫",
    description: "–£–º–µ–Ω–∏–µ –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å—Å—è –æ —Ü–µ–Ω–µ",
    branch: "money",
    requiredReputation: 500,
    cost: 2000,
    effect: "+10% —Ü–µ–Ω–∞ –±–∏—Ç–æ–≤",
    icon: "ü§ù",
  },
  businessman: {
    id: "businessman",
    name: "–ë–∏–∑–Ω–µ—Å–º–µ–Ω",
    description: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤–µ–¥–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å–∞",
    branch: "money",
    requiredReputation: 2000,
    cost: 8000,
    effect: "+25% —Ü–µ–Ω–∞ –±–∏—Ç–æ–≤",
    icon: "üíº",
  },
  mogul: {
    id: "mogul",
    name: "–ú–∞–≥–Ω–∞—Ç",
    description: "–ú–∞—Å—Ç–µ—Ä –º–æ–Ω–µ—Ç–∏–∑–∞—Ü–∏–∏ —Å–≤–æ–µ–≥–æ —Ç–∞–ª–∞–Ω—Ç–∞",
    branch: "money",
    requiredReputation: 5000,
    cost: 20000,
    effect: "+50% —Ü–µ–Ω–∞ –±–∏—Ç–æ–≤",
    icon: "üëë",
  },
}

// Get total quality bonus from skills
export function getSkillQualityBonus(skills: GameState["skills"]): number {
  let bonus = 0
  if (skills.earTraining) bonus += 5
  if (skills.musicTheory) bonus += 10
  if (skills.perfectionist) bonus += 20
  return bonus
}

// Get total price multiplier from skills
export function getSkillPriceMultiplier(skills: GameState["skills"]): number {
  let multiplier = 1.0
  if (skills.negotiator) multiplier += 0.1
  if (skills.businessman) multiplier += 0.25
  if (skills.mogul) multiplier += 0.5
  return multiplier
}

// Get energy cost reduction from skills
export function getSkillEnergyCostReduction(skills: GameState["skills"]): number {
  return skills.caffeineRush ? 0.1 : 0 // 10% reduction
}

// Get max energy bonus from skills
export function getSkillMaxEnergyBonus(skills: GameState["skills"]): number {
  return skills.stamina ? 0.2 : 0 // 20% bonus
}

// Get energy regen bonus from skills
export function getSkillEnergyRegenBonus(skills: GameState["skills"]): number {
  return skills.flowState ? 1 : 0 // +1/min
}

// BEAT CONTRACTS CONFIGURATION
export interface BeatContract {
  id: string
  name: string
  description: string
  difficulty: "easy" | "medium" | "hard"
  requirements: {
    beats?: number // Total beats to create
    minAccuracy?: number // Minimum accuracy percentage
    minQuality?: number // Minimum quality
    timeLimit?: number // Hours to complete (optional)
  }
  reward: {
    money: number
    reputation: number
  }
  icon: string
}

export const BEAT_CONTRACTS_POOL: BeatContract[] = [
  // Easy Contracts (500+ rep, Tier 2)
  {
    id: "easy_volume",
    name: "–ù–∞–±–æ—Ä –±–∏—Ç–æ–≤",
    description: "–°–æ–∑–¥–∞–π 10 –±–∏—Ç–æ–≤ —Å –ª—é–±—ã–º –∫–∞—á–µ—Å—Ç–≤–æ–º",
    difficulty: "easy",
    requirements: { beats: 10 },
    reward: { money: 2000, reputation: 200 },
    icon: "üì¶",
  },
  {
    id: "easy_quality",
    name: "–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∑–≤—É–∫",
    description: "–°–æ–∑–¥–∞–π 5 –±–∏—Ç–æ–≤ —Å –∫–∞—á–µ—Å—Ç–≤–æ–º 70%+",
    difficulty: "easy",
    requirements: { beats: 5, minQuality: 70 },
    reward: { money: 2500, reputation: 250 },
    icon: "üéµ",
  },

  // Medium Contracts (2000+ rep, Tier 3)
  {
    id: "medium_accuracy",
    name: "–¢–æ—á–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è",
    description: "–°–æ–∑–¥–∞–π 5 –±–∏—Ç–æ–≤ —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é 85%+",
    difficulty: "medium",
    requirements: { beats: 5, minAccuracy: 85 },
    reward: { money: 5000, reputation: 500 },
    icon: "üéØ",
  },
  {
    id: "medium_volume",
    name: "–ù–µ–¥–µ–ª—å–Ω—ã–π –ø–ª–∞–Ω",
    description: "–°–æ–∑–¥–∞–π 20 –±–∏—Ç–æ–≤ –∑–∞ –Ω–µ–¥–µ–ª—é",
    difficulty: "medium",
    requirements: { beats: 20, timeLimit: 168 }, // 7 days
    reward: { money: 6000, reputation: 600 },
    icon: "üìÖ",
  },

  // Hard Contracts (5000+ rep, Tier 4)
  {
    id: "hard_perfection",
    name: "–ü–µ—Ä—Ñ–µ–∫—Ü–∏–æ–Ω–∏–∑–º",
    description: "–°–æ–∑–¥–∞–π 10 –±–∏—Ç–æ–≤ —Å –∫–∞—á–µ—Å—Ç–≤–æ–º 90%+",
    difficulty: "hard",
    requirements: { beats: 10, minQuality: 90 },
    reward: { money: 10000, reputation: 1000 },
    icon: "üíé",
  },
  {
    id: "hard_master",
    name: "–ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å",
    description: "–°–æ–∑–¥–∞–π 5 –±–∏—Ç–æ–≤ —Å —Ç–æ—á–Ω–æ—Å—Ç—å—é 95%+ –∏ –∫–∞—á–µ—Å—Ç–≤–æ–º 85%+",
    difficulty: "hard",
    requirements: { beats: 5, minAccuracy: 95, minQuality: 85 },
    reward: { money: 15000, reputation: 1500 },
    icon: "üèÜ",
  },
]

// Get available contracts based on reputation tier
export function getAvailableContracts(reputation: number): BeatContract[] {
  const tier = getReputationTier(reputation)

  if (tier < 2) return [] // No contracts until Tier 2 (500+ rep)

  const available: BeatContract[] = []

  // Tier 2 (500-2000): Easy contracts only
  if (tier === 2) {
    available.push(...BEAT_CONTRACTS_POOL.filter((c) => c.difficulty === "easy"))
  }

  // Tier 3 (2000-5000): Easy + Medium
  if (tier === 3) {
    available.push(
      ...BEAT_CONTRACTS_POOL.filter((c) => c.difficulty === "easy" || c.difficulty === "medium"),
    )
  }

  // Tier 4+ (5000+): All contracts
  if (tier >= 4) {
    available.push(...BEAT_CONTRACTS_POOL)
  }

  return available
}

// LABEL DEALS CONFIGURATION
export interface LabelDeal {
  id: "indie" | "small" | "major"
  name: string
  description: string
  cost: number
  passiveIncomePerHour: number
  requiredReputation: number
  icon: string
}

export const LABEL_DEALS_CONFIG: Record<"indie" | "small" | "major", LabelDeal> = {
  indie: {
    id: "indie",
    name: "Indie Label",
    description: "–ü–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ —Å –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–º –ª–µ–π–±–ª–æ–º",
    cost: 5000,
    passiveIncomePerHour: 50,
    requiredReputation: 2000, // Tier 3
    icon: "üé∏",
  },
  small: {
    id: "small",
    name: "Small Label",
    description: "–ö–æ–Ω—Ç—Ä–∞–∫—Ç —Å –º–∞–ª—ã–º –ª–µ–π–±–ª–æ–º",
    cost: 20000,
    passiveIncomePerHour: 200,
    requiredReputation: 5000, // Tier 4
    icon: "üé§",
  },
  major: {
    id: "major",
    name: "Major Label",
    description: "–°–¥–µ–ª–∫–∞ —Å –∫—Ä—É–ø–Ω—ã–º –ª–µ–π–±–ª–æ–º",
    cost: 100000,
    passiveIncomePerHour: 1000,
    requiredReputation: 15000, // Tier 5
    icon: "üè¢",
  },
}

// Calculate total passive income from label deals (per minute)
export function getLabelDealsPassiveIncome(labelDeals: GameState["labelDeals"]): number {
  let incomePerHour = 0

  if (labelDeals.indie) incomePerHour += LABEL_DEALS_CONFIG.indie.passiveIncomePerHour
  if (labelDeals.small) incomePerHour += LABEL_DEALS_CONFIG.small.passiveIncomePerHour
  if (labelDeals.major) incomePerHour += LABEL_DEALS_CONFIG.major.passiveIncomePerHour

  return Math.floor(incomePerHour / 60) // Convert to per minute
}
