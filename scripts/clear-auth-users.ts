/**
 * Clear All Auth Users
 * WARNING: This will delete ALL authenticated users!
 * Use only in development/testing
 */

import { createClient } from '@supabase/supabase-js'

const SUPABASE_URL = process.env.NEXT_PUBLIC_SUPABASE_URL || ''
const SUPABASE_SERVICE_ROLE_KEY = process.env.SUPABASE_SERVICE_ROLE_KEY || ''

if (!SUPABASE_URL || !SUPABASE_SERVICE_ROLE_KEY) {
  console.error('‚ùå Missing Supabase credentials!')
  process.exit(1)
}

const supabase = createClient(SUPABASE_URL, SUPABASE_SERVICE_ROLE_KEY, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
})

async function clearAllAuthUsers() {
  console.log('üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö auth –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...\n')

  // Step 1: List all users
  const { data: { users }, error: listError } = await supabase.auth.admin.listUsers()

  if (listError) {
    console.error('‚ùå Error listing users:', listError.message)
    process.exit(1)
  }

  console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${users.length}`)

  if (users.length === 0) {
    console.log('‚úÖ –ù–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è')
    return
  }

  console.log('\nüë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:')
  users.forEach((user, i) => {
    console.log(`  ${i + 1}. ${user.email || 'no email'} (${user.id})`)
  })

  console.log('\n‚ö†Ô∏è  WARNING: –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...')
  console.log('Press Ctrl+C to cancel\n')

  await new Promise(resolve => setTimeout(resolve, 5000))

  // Step 2: Delete all users
  console.log('üóëÔ∏è  Deleting users...\n')

  let successCount = 0
  let errorCount = 0

  for (const user of users) {
    const { error } = await supabase.auth.admin.deleteUser(user.id)

    if (error) {
      console.error(`  ‚ùå Failed to delete ${user.email}: ${error.message}`)
      errorCount++
    } else {
      console.log(`  ‚úÖ Deleted ${user.email || user.id}`)
      successCount++
    }
  }

  // Step 3: Verify
  console.log('\nüìä Results:')
  console.log(`  ‚úÖ Successfully deleted: ${successCount}`)
  console.log(`  ‚ùå Failed to delete: ${errorCount}`)

  const { data: { users: remainingUsers } } = await supabase.auth.admin.listUsers()
  console.log(`  üìä Remaining users: ${remainingUsers.length}`)

  if (remainingUsers.length === 0) {
    console.log('\n‚úÖ –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!')
  } else {
    console.log('\n‚ö†Ô∏è  –û—Å—Ç–∞–ª–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:')
    remainingUsers.forEach(user => {
      console.log(`    - ${user.email || user.id}`)
    })
  }
}

clearAllAuthUsers()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error('‚ùå Error:', error)
    process.exit(1)
  })
